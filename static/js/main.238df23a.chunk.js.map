{"version":3,"sources":["InputBar.js","BookContainer.js","BooksContainer.js","App.js","index.js"],"names":["InputBar","props","useState","searchTerm","updateSearchTerm","style","marginTop","color","onChange","e","term","target","value","updateState","type","width","height","Button","onClick","getBooks","BookContainer","console","log","bookInfo","background","position","marginBottom","fontFamily","boxShadow","display","top","src","volumeInfo","imageLinks","smallThumbnail","alt","paddingTop","textAlign","paddingLeft","paddingRight","textOverflow","title","subtitle","authors","publisher","link","canonicalVolumeLink","window","open","BooksContainer","gridTemplateColumns","justifyItems","books","map","ele","ind","key","notFoundSegment","Header","icon","Icon","name","App","setBooks","loading","setLoading","found","setFound","className","inputBook","axios","get","then","res","data","totalItems","items","catch","err","timeout","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.238df23a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nexport default function InputBar(props) {\r\n  const [searchTerm, updateSearchTerm] = useState(\"\");\r\n\r\n  const updateState = e => {\r\n    let term = e.target.value;\r\n    updateSearchTerm(term);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"5%\" }}>\r\n      <h1 style={{ color: \"#a1a1a1\" }}> Book Finder </h1>\r\n      <input\r\n        onChange={e => {\r\n          updateState(e);\r\n        }}\r\n        type=\"text\"\r\n        style={{ width: \"300px\", height: \"35px\" }}\r\n      ></input>\r\n      <Button\r\n        color=\"teal\"\r\n        onClick={e => {\r\n          props.getBooks(searchTerm);\r\n        }}\r\n      >\r\n        Search\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nexport default function BookContainer(props) {\r\n  console.log(props.bookInfo);\r\n\r\n  const handleClick = link => {\r\n    window.open(link, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        background: \"yellow\",\r\n        position: \"relative\",\r\n        marginBottom: \"20%\"\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          fontFamily: \"Roboto\",\r\n          background: \"white\",\r\n          width: \"400px\",\r\n          height: \"300px\",\r\n          boxShadow: \"10px 10px 5px grey\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            display: \"flex\",\r\n            top: \"-40px\"\r\n          }}\r\n        >\r\n          <div style={{}}>\r\n            <img\r\n              src={\r\n                props.bookInfo.volumeInfo.imageLinks\r\n                  ? props.bookInfo.volumeInfo.imageLinks.smallThumbnail\r\n                  : \"https://other-projects-fsxl.s3.us-east-2.amazonaws.com/book-cover-placeholder.png\"\r\n              }\r\n              alt=\"\"\r\n            ></img>\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"80px\",\r\n              textAlign: \"initial\",\r\n              paddingLeft: \"5%\",\r\n              color: \"#a1a1a1\",\r\n              paddingRight: \"5px\",\r\n              textOverflow: \"ellipsis\"\r\n            }}\r\n          >\r\n            <h3 style={{ color: \"#979797\", textOverflow: \"ellipsis\" }}>\r\n              {props.bookInfo.volumeInfo.title}\r\n              {props.bookInfo.volumeInfo.subtitle\r\n                ? \": \" + props.bookInfo.volumeInfo.subtitle\r\n                : null}\r\n            </h3>\r\n            {props.bookInfo.volumeInfo.authors\r\n              ? `By ${props.bookInfo.volumeInfo.authors[0]} `\r\n              : null}\r\n            <br />\r\n            {props.bookInfo.volumeInfo.publisher\r\n              ? `Published By: ${props.bookInfo.volumeInfo.publisher}`\r\n              : null}\r\n            <div style={{ marginTop: \"3%\" }}>\r\n              <Button\r\n                onClick={() => {\r\n                  handleClick(props.bookInfo.volumeInfo.canonicalVolumeLink);\r\n                }}\r\n                color=\"teal\"\r\n              >\r\n                See this book\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport BookContainer from \"./BookContainer\";\r\n\r\nexport default function BooksContainer(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"auto auto\",\r\n        marginTop: \"6%\",\r\n        textAlign: \"center\",\r\n        justifyItems: \"center\",\r\n        paddingLeft: \"15%\",\r\n        paddingRight: \"15%\"\r\n      }}\r\n    >\r\n      {props.books.map((ele, ind) => {\r\n        return <BookContainer key={ind} bookInfo={ele} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport InputBar from \"./InputBar\";\r\nimport BooksContainer from \"./BooksContainer\";\r\nimport axios from \"axios\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nconst notFoundSegment = () => (\r\n  <Header icon>\r\n    <Icon name=\"search\" />\r\n    We don't have any books matching your search.\r\n  </Header>\r\n);\r\n\r\nfunction App(props) {\r\n  const [books, setBooks] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [found, setFound] = useState(true);\r\n\r\n  const getBooks = inputBook => {\r\n    setLoading(true);\r\n    if (!found) setFound(true);\r\n    axios\r\n      .get(\"https://www.googleapis.com/books/v1/volumes?q=\" + inputBook)\r\n      .then(res => {\r\n        if (res.data.totalItems === 0) {\r\n          setLoading(false);\r\n          setBooks([]);\r\n          setFound(false);\r\n        } else {\r\n          setBooks(res.data.items);\r\n          setLoading(false);\r\n          if (!found) {\r\n            setFound(true);\r\n          }\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(\"this is the err\", err);\r\n      });\r\n  };\r\n\r\n  const startSpinner = () => {\r\n    return (\r\n      <div style={{ paddingTop: \"5%\" }}>\r\n        <Loader\r\n          type=\"Oval\"\r\n          color=\"#009C95\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <InputBar getBooks={getBooks} />\r\n      {loading ? startSpinner() : null}\r\n      {!found ? notFoundSegment() : null}\r\n      {!loading && books.length ? <BooksContainer books={books} /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}